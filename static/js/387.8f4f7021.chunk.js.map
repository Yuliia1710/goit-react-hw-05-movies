{"version":3,"file":"static/js/387.8f4f7021.chunk.js","mappings":"4MAEaA,EAAaC,EAAAA,EAAAA,IAAH,uEAMVC,EAAeD,EAAAA,EAAAA,IAAH,6D,mBCJnBE,EAAaC,SAASC,cAAc,gBAwB1C,EAtBe,WACb,OAAOC,EAAAA,EAAAA,eACL,SAACN,EAAD,WACE,SAACE,EAAD,WACE,SAAC,KAAD,CACEK,OAAO,MACPC,MAAM,MACNC,MAAM,MACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,yBACVC,iBAAiB,GACjBC,iBAAiB,GACjBC,kBAAkB,SAIxBb,EAEH,C,qICxBYc,E,QAAKhB,EAAAA,GAAH,sH,SC8Cf,EAxCgB,WACd,IAAQiB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRD,GAAc,IACdE,EAAAA,EAAAA,IAA2BR,GACxBS,MAAK,SAAAC,GACwB,IAAxBA,EAAKC,QAAQC,QAIjBR,EAAWM,EAAKC,QACjB,IACAE,SAAQ,WACPP,GAAc,EACf,GACJ,GAAE,CAACN,KAGF,2BACGK,IAAc,SAACS,EAAA,EAAD,KACbX,IAAW,uBAAG,wBACfA,IACC,SAACJ,EAAD,UACGI,EAAQY,KAAI,SAAAC,GACX,OACE,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,QAKV,C,wJC9CD,IAAMC,EAAW,gCAEXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAWC,SAASC,IACd,IAAMC,EAAG,UAAMP,EAAN,iBAET,OAAOQ,MAAMD,EAAKN,GAASZ,MAAK,SAAAoB,GAAQ,OAAIA,EAASC,MAAb,GACzC,CAKM,SAASC,EAAoBC,GAClC,IAAML,EAAG,UAAMP,EAAN,iBAAuBY,GAEhC,OAAOJ,MAAMD,EAAKN,GAASZ,MAAK,SAAAoB,GAAQ,OAAIA,EAASC,MAAb,GACzC,CAMM,SAASG,EAAuBC,GACrC,IAAMP,EAAG,UAAMP,EAAN,8BAAoCc,EAApC,8CAET,OAAON,MAAMD,EAAKN,GAASZ,MAAK,SAAAoB,GAAQ,OAAIA,EAASC,MAAb,GACzC,CAEM,SAASK,EAAwBH,GACtC,IAAML,EAAG,UAAMP,EAAN,iBAAuBY,EAAvB,YAET,OAAOJ,MAAMD,EAAKN,GAASZ,MAAK,SAAAoB,GAAQ,OAAIA,EAASC,MAAb,GACzC,CAEM,SAAStB,EAA2BwB,GACzC,IAAML,EAAG,UAAMP,EAAN,iBAAuBY,EAAvB,YAET,OAAOJ,MAAMD,EAAKN,GAASZ,MAAK,SAAAoB,GAAQ,OAAIA,EAASC,MAAb,GACzC,C","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","servises/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderWrap = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n`;\n\nexport const StyledLoader = styled.div`\n  transform: translate(-50%, -50%);\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\nimport { LoaderWrap, StyledLoader } from './Loader.styled';\nimport { createPortal } from 'react-dom';\n\nconst loaderRoot = document.querySelector('#loader-root');\n\nconst Loader = () => {\n  return createPortal(\n    <LoaderWrap>\n      <StyledLoader>\n        <ThreeCircles\n          height=\"200\"\n          width=\"200\"\n          color=\"red\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n          ariaLabel=\"three-circles-rotating\"\n          outerCircleColor=\"\"\n          innerCircleColor=\"\"\n          middleCircleColor=\"\"\n        />\n      </StyledLoader>\n    </LoaderWrap>,\n    loaderRoot\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  list-style: none;\n  padding: 0;\n  /* display: flex;\n  flex-wrap: wrap; */\n  gap: 10px;\n`;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviewsByIdFromApi } from '../../servises/api';\nimport Loader from 'components/Loader/Loader';\nimport { Ul } from './Reviews.styled';\n// import PropTypes from 'prop-types'\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [showLoader, setShowLoader] = useState(false);\n\n  useEffect(() => {\n    setShowLoader(true);\n    getMovieReviewsByIdFromApi(movieId)\n      .then(data => {\n        if (data.results.length === 0) {\n          return;\n        }\n\n        setReviews(data.results);\n      })\n      .finally(() => {\n        setShowLoader(false);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      {showLoader && <Loader />}\n      {!reviews && <p>There is no reviews</p>}\n      {reviews && (\n        <Ul>\n          {reviews.map(review => {\n            return (\n              <li key={review.id}>\n                <h5>{review.author}</h5>\n                <p>{review.content}</p>\n              </li>\n            );\n          })}\n        </Ul>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n\n// Reviews.propTypes = {};\n","const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkZjQ4Y2ZiNzMzZTA2ZWI2N2Y0MWUxMWVmOGI0YTM0OSIsInN1YiI6IjY0N2JhZTcyY2Y0YjhiMDEwMzFlNjVlMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.h8JLVvBGFANshw9twf7FdsxjXcyLe5sPG_024DWVO5o',\n  },\n};\n\n//1\n// export function getPopularMoviesFromApi() {\n//   const URL = `${BASE_URL}trending/all/day?language=en-US`;\n\n//   return fetch(URL, options).then(response => response.json());\n// }\n\nexport function getPopularMoviesFromApi() {\n  const URL = `${BASE_URL}movie/popular`;\n\n  return fetch(URL, options).then(response => response.json());\n}\n//api.themoviedb.org/3/movie/{movie_id}\n\n//2\n\nexport function getMovieByIdFromApi(movie_id) {\n  const URL = `${BASE_URL}movie/${movie_id}`;\n\n  return fetch(URL, options).then(response => response.json());\n}\n\n//3\n\n//api.themoviedb.org/3/search/movie?query=cat&include_adult=false&language=en-US&page=1\n\nexport function getMovieByQueryFromApi(query) {\n  const URL = `${BASE_URL}search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n\n  return fetch(URL, options).then(response => response.json());\n}\n\nexport function getMovieCastByIdFromApi(movie_id) {\n  const URL = `${BASE_URL}movie/${movie_id}/credits`;\n\n  return fetch(URL, options).then(response => response.json());\n}\n\nexport function getMovieReviewsByIdFromApi(movie_id) {\n  const URL = `${BASE_URL}movie/${movie_id}/reviews`;\n\n  return fetch(URL, options).then(response => response.json());\n}\n"],"names":["LoaderWrap","styled","StyledLoader","loaderRoot","document","querySelector","createPortal","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","Ul","movieId","useParams","useState","reviews","setReviews","showLoader","setShowLoader","useEffect","getMovieReviewsByIdFromApi","then","data","results","length","finally","Loader","map","review","author","content","id","BASE_URL","options","method","headers","accept","Authorization","getPopularMoviesFromApi","URL","fetch","response","json","getMovieByIdFromApi","movie_id","getMovieByQueryFromApi","query","getMovieCastByIdFromApi"],"sourceRoot":""}