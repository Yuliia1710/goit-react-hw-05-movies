{"version":3,"file":"static/js/415.7464704d.chunk.js","mappings":"qNAEaA,EAAKC,EAAAA,EAAAA,GAAH,8HASFC,EAAKD,EAAAA,EAAAA,GAAH,yCAIFE,EAAaF,EAAAA,EAAAA,IAAH,4DAKVG,EAAMH,EAAAA,EAAAA,IAAH,kG,kBCuBhB,EAtCqB,SAAC,GAAuB,IAArBI,EAAoB,EAApBA,cAChBC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,SAACP,EAAD,UACGK,EAAcG,KAAI,SAAAC,GACjB,IAAIC,EAAc,KAEhBA,EADED,EAAME,MACMF,EAAME,MAENF,EAAMG,KAGtB,IAAIC,EAASC,EAKb,OAJIL,EAAMM,cACRF,EAAM,yCAAqCJ,EAAMM,eAIjD,UAACb,EAAD,YACE,SAAC,KAAD,CAAMc,GAAE,kBAAaP,EAAMQ,IAAMC,MAAO,CAAEC,KAAMb,GAAhD,UACE,SAACH,EAAD,WACE,SAACC,EAAD,CAAKgB,OAAQP,EAAQQ,IAAI,UAG7B,0BACE,SAAC,KAAD,CAASL,GAAE,kBAAaP,EAAMQ,IAAMC,MAAO,CAAEC,KAAMb,GAAnD,SACGI,QARED,EAAMQ,GAalB,KAGN,C,mCCnCD,IAJc,SAAC,GAAc,IAAZK,EAAW,EAAXA,KACf,OAAO,wBAAKA,GACb,C,uFCmBD,UAlBa,WACX,OAA0CC,EAAAA,EAAAA,UAAS,MAAnD,eAAOlB,EAAP,KAAsBmB,EAAtB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAA0BC,MAAK,SAAAC,GAC7BJ,EAAiBI,EAAKC,QACvB,GACF,GAAE,KAGD,iCACIxB,IAAiB,+CAClBA,IAAiB,SAAC,IAAD,CAAOiB,KAAK,mBAC7BjB,IAAiB,SAAC,IAAD,CAAcA,cAAeA,MAGpD,C,+HCrBD,IAAMyB,EAAW,gCAEXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAWC,SAAST,IACd,IAAMU,EAAG,UAAMN,EAAN,iBAET,OAAOO,MAAMD,EAAKL,GAASJ,MAAK,SAAAW,GAAQ,OAAIA,EAASC,MAAb,GACzC,CAeM,SAASC,EAAuBC,GACrC,IAAML,EAAG,UAAMN,EAAN,8BAAoCW,EAApC,8CAET,OAAOJ,MAAMD,EAAKL,GAASJ,MAAK,SAAAW,GAAQ,OAAIA,EAASC,MAAb,GACzC,CAEM,SAASG,EAAwBC,GACtC,IAAMP,EAAG,UAAMN,EAAN,iBAAuBa,EAAvB,YAET,OAAON,MAAMD,EAAKL,GAASJ,MAAK,SAAAW,GAAQ,OAAIA,EAASC,MAAb,GACzC,CAEM,SAASK,EAA2BD,GACzC,IAAMP,EAAG,UAAMN,EAAN,iBAAuBa,EAAvB,YAET,OAAON,MAAMD,EAAKL,GAASJ,MAAK,SAAAW,GAAQ,OAAIA,EAASC,MAAb,GACzC,C","sources":["components/MoviesLayout/MoviesLayout.styled.jsx","components/MoviesLayout/MoviesLayout.jsx","components/Title/Title.jsx","pages/Home.jsx","servises/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const UL = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const Li = styled.li`\n  width: 225px;\n`;\n\nexport const ImageThumb = styled.div`\n  width: 100%px;\n  height: 339px;\n`;\n\nexport const Img = styled.img`\n  display: block;\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`;\n","import { NavLink, Link, useLocation } from 'react-router-dom';\nimport { UL, Li, ImageThumb, Img } from './MoviesLayout.styled';\nimport noPosterPhoto from '../../images/no-photo-available.png';\n// import PropTypes from 'prop-types'\n\nconst MoviesLayout = ({ arrayOfMovies }) => {\n  const location = useLocation();\n  // console.log('location', location);\n\n  return (\n    <UL>\n      {arrayOfMovies.map(movie => {\n        let nameOfMovie = null;\n        if (movie.title) {\n          nameOfMovie = movie.title;\n        } else {\n          nameOfMovie = movie.name;\n        }\n\n        let poster = noPosterPhoto;\n        if (movie.poster_path) {\n          poster = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n        }\n\n        return (\n          <Li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <ImageThumb>\n                <Img srcSet={poster} alt=\"\" />\n              </ImageThumb>\n            </Link>\n            <div>\n              <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {nameOfMovie}\n              </NavLink>\n            </div>\n          </Li>\n        );\n      })}\n    </UL>\n  );\n};\n\nexport default MoviesLayout;\n\n// MoviesLayout.propTypes = {};\n","// import PropTypes from 'prop-types'\n\nconst Title = ({ text }) => {\n  return <h1>{text}</h1>;\n};\n\nexport default Title;\n\n// Title.propTypes = {};\n","import { getPopularMoviesFromApi } from '../servises/api';\nimport { useEffect, useState } from 'react';\nimport MoviesLayout from 'components/MoviesLayout/MoviesLayout';\nimport Title from 'components/Title/Title';\n\nconst Home = () => {\n  const [arrayOfMovies, setArrayOfMovies] = useState(null);\n\n  useEffect(() => {\n    getPopularMoviesFromApi().then(data => {\n      setArrayOfMovies(data.results);\n    });\n  }, []);\n\n  return (\n    <>\n      {!arrayOfMovies && <p>There is no results</p>}\n      {arrayOfMovies && <Title text=\"Trending today\" />}\n      {arrayOfMovies && <MoviesLayout arrayOfMovies={arrayOfMovies} />}\n    </>\n  );\n};\n\nexport default Home;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkZjQ4Y2ZiNzMzZTA2ZWI2N2Y0MWUxMWVmOGI0YTM0OSIsInN1YiI6IjY0N2JhZTcyY2Y0YjhiMDEwMzFlNjVlMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.h8JLVvBGFANshw9twf7FdsxjXcyLe5sPG_024DWVO5o',\n  },\n};\n\n//1\n// export function getPopularMoviesFromApi() {\n//   const URL = `${BASE_URL}trending/all/day?language=en-US`;\n\n//   return fetch(URL, options).then(response => response.json());\n// }\n\nexport function getPopularMoviesFromApi() {\n  const URL = `${BASE_URL}movie/popular`;\n\n  return fetch(URL, options).then(response => response.json());\n}\n//api.themoviedb.org/3/movie/{movie_id}\n\n//2\n\nexport function getMovieByIdFromApi(movie_id) {\n  const URL = `${BASE_URL}movie/${movie_id}`;\n\n  return fetch(URL, options).then(response => response.json());\n}\n\n//3\n\n//api.themoviedb.org/3/search/movie?query=cat&include_adult=false&language=en-US&page=1\n\nexport function getMovieByQueryFromApi(query) {\n  const URL = `${BASE_URL}search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n\n  return fetch(URL, options).then(response => response.json());\n}\n\nexport function getMovieCastByIdFromApi(movie_id) {\n  const URL = `${BASE_URL}movie/${movie_id}/credits`;\n\n  return fetch(URL, options).then(response => response.json());\n}\n\nexport function getMovieReviewsByIdFromApi(movie_id) {\n  const URL = `${BASE_URL}movie/${movie_id}/reviews`;\n\n  return fetch(URL, options).then(response => response.json());\n}\n"],"names":["UL","styled","Li","ImageThumb","Img","arrayOfMovies","location","useLocation","map","movie","nameOfMovie","title","name","poster","noPosterPhoto","poster_path","to","id","state","from","srcSet","alt","text","useState","setArrayOfMovies","useEffect","getPopularMoviesFromApi","then","data","results","BASE_URL","options","method","headers","accept","Authorization","URL","fetch","response","json","getMovieByQueryFromApi","query","getMovieCastByIdFromApi","movie_id","getMovieReviewsByIdFromApi"],"sourceRoot":""}