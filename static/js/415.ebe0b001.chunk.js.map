{"version":3,"file":"static/js/415.ebe0b001.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesLayout/MoviesLayout.styled.jsx","components/MoviesLayout/MoviesLayout.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","pages/Home.jsx","servises/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderWrap = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n`;\n\nexport const StyledLoader = styled.div`\n  transform: translate(-50%, -50%);\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\nimport { LoaderWrap, StyledLoader } from './Loader.styled';\nimport { createPortal } from 'react-dom';\n\nconst loaderRoot = document.querySelector('#loader-root');\n\nconst Loader = () => {\n  return createPortal(\n    <LoaderWrap>\n      <StyledLoader>\n        <ThreeCircles\n          height=\"200\"\n          width=\"200\"\n          color=\"red\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n          ariaLabel=\"three-circles-rotating\"\n          outerCircleColor=\"\"\n          innerCircleColor=\"\"\n          middleCircleColor=\"\"\n        />\n      </StyledLoader>\n    </LoaderWrap>,\n    loaderRoot\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const UL = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const Li = styled.li`\n  width: 225px;\n`;\n\nexport const ImageThumb = styled.div`\n  width: 100%px;\n  height: 339px;\n`;\n\nexport const Img = styled.img`\n  display: block;\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  text-decoration: none;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: calc(16 / 14);\n  letter-spacing: 0.03em;\n  text-transform: uppercase;\n\n  color: #212121;\n\n  :hover {\n    color: brown;\n  }\n`;\n\nexport const TextBlock = styled.div`\n  padding-top: 10px;\n  padding-bottom: 10px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  UL,\n  Li,\n  ImageThumb,\n  Img,\n  StyledNavLink,\n  TextBlock,\n} from './MoviesLayout.styled';\nimport noPosterPhoto from '../../images/no-photo-available.png';\nimport PropTypes from 'prop-types';\n\nconst MoviesLayout = ({ arrayOfMovies }) => {\n  const location = useLocation();\n  // console.log('location', location);\n\n  return (\n    <UL>\n      {arrayOfMovies.map(movie => {\n        let nameOfMovie = null;\n        if (movie.title) {\n          nameOfMovie = movie.title;\n        } else {\n          nameOfMovie = movie.name;\n        }\n\n        let poster = noPosterPhoto;\n        if (movie.poster_path) {\n          poster = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n        }\n\n        return (\n          <Li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <ImageThumb>\n                <Img srcSet={poster} alt=\"\" />\n              </ImageThumb>\n            </Link>\n            <TextBlock>\n              <StyledNavLink\n                to={`/movies/${movie.id}`}\n                state={{ from: location }}\n              >\n                {nameOfMovie}\n              </StyledNavLink>\n            </TextBlock>\n          </Li>\n        );\n      })}\n    </UL>\n  );\n};\n\nexport default MoviesLayout;\n\nMoviesLayout.propTypes = {\n  arrayOfMovies: PropTypes.array.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const H1 = styled.h1`\n  color: brown;\n`;\n","// import PropTypes from 'prop-types'\nimport { H1 } from './Title.styled';\nimport PropTypes from 'prop-types';\n\nconst Title = ({ text }) => {\n  return <H1>{text}</H1>;\n};\n\nexport default Title;\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import { getPopularMoviesFromApi } from '../servises/api';\nimport { useEffect, useState } from 'react';\nimport MoviesLayout from 'components/MoviesLayout/MoviesLayout';\nimport Title from 'components/Title/Title';\nimport Loader from '../components/Loader/Loader';\n\nconst Home = () => {\n  const [arrayOfMovies, setArrayOfMovies] = useState(null);\n  const [showLoader, setShowLoader] = useState(false);\n\n  useEffect(() => {\n    setShowLoader(true);\n    getPopularMoviesFromApi()\n      .then(data => {\n        setArrayOfMovies(data.results);\n      })\n      .finally(() => {\n        setShowLoader(false);\n      });\n  }, []);\n\n  return (\n    <>\n      {showLoader && <Loader />}\n      {!arrayOfMovies && <p>There is no results</p>}\n      {arrayOfMovies && <Title text=\"Trending today\" />}\n      {arrayOfMovies && <MoviesLayout arrayOfMovies={arrayOfMovies} />}\n    </>\n  );\n};\n\nexport default Home;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkZjQ4Y2ZiNzMzZTA2ZWI2N2Y0MWUxMWVmOGI0YTM0OSIsInN1YiI6IjY0N2JhZTcyY2Y0YjhiMDEwMzFlNjVlMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.h8JLVvBGFANshw9twf7FdsxjXcyLe5sPG_024DWVO5o',\n  },\n};\n\n//1\n// export function getPopularMoviesFromApi() {\n//   const URL = `${BASE_URL}trending/all/day?language=en-US`;\n\n//   return fetch(URL, options).then(response => response.json());\n// }\n\nexport function getPopularMoviesFromApi() {\n  const URL = `${BASE_URL}movie/popular`;\n\n  return fetch(URL, options).then(response => response.json());\n}\n//api.themoviedb.org/3/movie/{movie_id}\n\n//2\n\nexport function getMovieByIdFromApi(movie_id) {\n  const URL = `${BASE_URL}movie/${movie_id}`;\n\n  return fetch(URL, options).then(response => response.json());\n}\n\n//3\n\n//api.themoviedb.org/3/search/movie?query=cat&include_adult=false&language=en-US&page=1\n\nexport function getMovieByQueryFromApi(query) {\n  const URL = `${BASE_URL}search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n\n  return fetch(URL, options).then(response => response.json());\n}\n\nexport function getMovieCastByIdFromApi(movie_id) {\n  const URL = `${BASE_URL}movie/${movie_id}/credits`;\n\n  return fetch(URL, options).then(response => response.json());\n}\n\nexport function getMovieReviewsByIdFromApi(movie_id) {\n  const URL = `${BASE_URL}movie/${movie_id}/reviews`;\n\n  return fetch(URL, options).then(response => response.json());\n}\n"],"names":["LoaderWrap","styled","StyledLoader","loaderRoot","document","querySelector","createPortal","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","UL","Li","ImageThumb","Img","StyledNavLink","NavLink","TextBlock","arrayOfMovies","location","useLocation","map","movie","nameOfMovie","title","name","poster","noPosterPhoto","poster_path","to","id","state","from","srcSet","alt","H1","text","useState","setArrayOfMovies","showLoader","setShowLoader","useEffect","getPopularMoviesFromApi","then","data","results","finally","BASE_URL","options","method","headers","accept","Authorization","URL","fetch","response","json","getMovieByIdFromApi","movie_id","getMovieByQueryFromApi","query","getMovieCastByIdFromApi","getMovieReviewsByIdFromApi"],"sourceRoot":""}